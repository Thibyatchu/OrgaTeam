security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        App\Entity\User: 'auto'
        App\Entity\Admin: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_admin_provider:
            entity:
                class: App\Entity\Admin
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern: ^/admin
            stateless: false
            provider: app_admin_provider
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: admin
            logout:
                path: app_logout
                target: /

        main:
            pattern: ^/
            stateless: false
            provider: app_admin_provider
            form_login:
                login_path: app_user_login
                check_path: app_user_login
                default_target_path: app_home
                enable_csrf: true
            logout:
                path: app_user_logout
                target: /

    access_control:
        # Étape 1 : Accès public uniquement à / et /register
        - { path: ^/register, roles: PUBLIC_ACCESS }
        - { path: ^/$, roles: PUBLIC_ACCESS }

        # Étape 2 : Accès utilisateur connecté
        - { path: ^/home, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/equipe, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/evenement, roles: IS_AUTHENTICATED_FULLY }

        # Étape 3 : Accès admin connecté
        #- { path: ^/admin, roles: ROLE_ADMIN }

        # Accès api
        - { path: ^/api/docs, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI docs
        - { path: ^/auth, roles: PUBLIC_ACCESS }
        - { path: ^/api/, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
